function call_api_through_ajax(get_data, callbackFun = "", failureFun = "", AGENT_ID = "", TELEPHONY_IP = "", disFlag = 0, fileData = "") {
    $.ajax({
        type: "POST",
        url: "call_to_api.php?disFlag=" + disFlag + "&AGENT_ID=" + AGENT_ID + "&TELEPHONY_IP=" + TELEPHONY_IP,
		xhrFields: {
			withCredentials: true
		},
        data: get_data,
        beforeSend: function() {
            $.blockUI({
                message: '<i class="icon-spinner4 spinner"></i>',
                overlayCSS: {
                    backgroundColor: "#1b2024",
                    opacity: .8,
                    cursor: "wait"
                },
                css: {
                    border: 0,
                    color: "#fff",
                    padding: 0,
                    backgroundColor: "transparent"
                }
            })
        },
        complete: function() {
            $.unblockUI(), console.log("COMPLETE REQ---");
            try {
                $("#save_ticket").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#save_lead").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_save").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_edit").attr("disabled", !1)
            } catch (e) {}
        },
        success: function(result) {
            console.log("SUCCESS REQ---");
            try {
                $("#save_ticket").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#save_lead").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_save").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_edit").attr("disabled", !1)
            } catch (e) {}
            var result = result.split("#$#");
            bootbox.alert(result[0], function() {
                var val_to_pass = null != result[2] && "" != result[2] ? result[2] + "#$#" + result[3] : "";
                if ((result[1] != null) && (result[1] != '')) {
                    if (result[1] == 1) {
                        if (fileData) {
                            var docket_no = result[3];
                            fileData.append("post_data", docket_no);
                            $.ajax({
                                url: 'save_uploaded_files.php',
                                type: "POST",
                                data: fileData,
                                processData: !1,
                                contentType: !1,
                                success: function(result) {
                                    console.log(result);
                                    console.log('file uploded successfully')
                                }
                            })
                        }
						if(callbackFun!= ""){
							eval(callbackFun + '("' + val_to_pass + '");')
						}
                    } else if ((result[1] == 0) && (failureFun!= "")) {
                        eval(failureFun + "();")
                    }
                }
            })
        },
        error: function() {
            try {
                $("#save_ticket").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#save_lead").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_save").attr("disabled", !1)
            } catch (e) {}
            try {
                $("#person_edit").attr("disabled", !1)
            } catch (e) {}
            console.log("Error!!!")
        }
    })
}

function apply_changes(table_name, module_name) {
    $.ajax({
        type: "POST",
        url: "apply_changes.php",
        data: "table_name=" + table_name + "&module_name=" + module_name,
        success: function(result) {
            var result = result.split("#$#");
            bootbox.alert(result[0], function() {
                var val_to_pass = null != result[2] && "" != result[2] ? result[2] : "";
                null != result[1] && 1 == result[1] ? "" != callbackFun && eval(callbackFun + "(" + val_to_pass + ");") : null != result[1] && 0 == result[1] && "" != failureFun && eval(failureFun + "();")
            })
        },
        error: function() {
            console.log("Error!!!")
        }
    })
}

function preventGlobalModal() {
    $("#global_modal_ticketing").on("show.bs.modal", function(e) {
        e.preventDefault()
    })
}

function checkForStatus(e, t, n, a, l = "", i = "TICKET") {
    if ("" !== e && void 0 !== e && "" !== t && void 0 !== t && "" !== n && void 0 !== n && "" !== a && void 0 !== a) {
        var o = "field_id=" + e + "&field_value=" + t + "&tableName=" + n + "&alert_field=" + a + "&from_module=" + l + "&type=" + i;
        $.ajax({
            type: "POST",
            url: "checkStatusAjax.php",
            data: o,
            success: function(e) {
                e = e.trim(), result1 = e.split("$#$"), field_name = result1[0], field_status = result1[1], "INACTIVE" != field_status && "0" != field_status || (bootbox.alert("Your selected " + field_name + " is inactive"), unset(field_name, field_status))
            },
            error: function() {
                console.log("error!!!")
            }
        })
    }
}

function addFormSpecifier(e, t, n) {
    var a = document.createElement("input");
    a.setAttribute("type", "hidden"), a.setAttribute("value", n), a.setAttribute("name", t), a.setAttribute("id", t);
    try {
        document.getElementById(e).appendChild(a)
    } catch (e) {
        alert(e)
    }
}

function removeFormSpecifier() {
    var e;
    null != (e = document.getElementById("modifier")) && e.parentNode.removeChild(e), null != (e = document.getElementById("saver")) && e.parentNode.removeChild(e), null != (e = document.getElementById("viewer")) && e.parentNode.removeChild(e)
}
var s = "",
    u = "",
    prev = "",
    t = "",
    v = "",
    p = "",
    D = 0,
    q = 0,
    qstring = "",
    numElement = 0,
    callBackFunc = "",
    globalVal = [];

function __highlight(e, t) {
    var n = new RegExp("(" + $.ui.autocomplete.escapeRegex(t) + ")", "ig");
    return e.replace(n, "<span class='highlight'>$1</span>")
}

function autoFill(e, t, n, a, l, i, o) {
    $("#" + e).autocomplete({
        source: function(e, r) {
            $.ajax({
                url: "search.php",
                dataType: "json",
                data: {
                    SearchTerm: e.term,
                    TableName: a,
                    DatabaseField: t,
                    WhereCondition: l,
                    GroupByField: i,
                    DatabaseField2: n,
                    multiple_column_check: o
                },
                success: function(t) {
                    if (console.log("request", e), console.log("this is result: ", t), null == t) r("");
                    else {
                        var n = t,
                            a = new Array(n.length),
                            l = 0;
                        n.forEach(function(t) {
                            var n = {
                                label: __highlight(t, e.term),
                                value: t
                            };
                            a[l] = n, l++
                        }), r(a)
                    }
                },
                error: function(e) {
                    r([])
                }
            })
        },
        open: function() {
            $(this).removeClass("wait")
        },
        search: function(e, t) {
            $(this).addClass("wait")
        },
        minLength: 1
    }).data("ui-autocomplete")._renderItem = function(e, t) {
        return $("<li></li>").data("item.autocomplete", t).append($("<a></a>").html($.parseHTML(t.label))).appendTo(e)
    }
}

function addAutoFill(e, n, a, l, i, o, r, c, d, s) {
    var u = document.location.host,
        f = window.location.pathname;
    (f = f.split("/")).pop(), f = f.length > 1 ? f.join("/") + "/searchData.php?" : "/searchData.php?", callBackFunc = s;
    var m = Trim(n.value);
    if (!/^[\. @a-zA-Z0-9_-]+$/.test(m)) return !1;
    var p;
    if (t = n, p = window.event ? window.event.keyCode : e.which, t.setAttribute("autocomplete", "off"), m.length >= 3 && prev != m) {
        t.onkeypress = pk, v && (v.visibility = "hidden"), prev = m;
        var h = document.createElement("script");
        h.setAttribute("id", "gac_a"), h.setAttribute("style", ""), h.src = "http://" + u + f + "fd1=" + a + "&fd2=" + l + "&tb=" + i + "&df=" + o + "&md=" + r + "&gf=" + c + "&el=" + encodeURIComponent(n.value) + "&dm" + d;
        var _ = document.getElementById("gac_a"),
            g = document.getElementsByTagName("head")[0];
        _ && g.removeChild(_), g.appendChild(h), t.focus(), ga(t.form), v.visibility = "visible", R()
    } else 38 != p && 40 != p || !v || PDisplay(p), m.length < 3 && v && (prev = m, v.visibility = "hidden")
}

function show_search_div(e) {
    null != document.getElementById("div_" + e) && ("none" == document.getElementById("div_" + e).style.display ? (document.getElementById("div_" + e).style.display = "", document.getElementById("img_" + e).src = "./images/minimize.png") : (document.getElementById("div_" + e).style.display = "none", document.getElementById("img_" + e).src = "./images/maximize.png"))
}

function appElementOnDiv(e, t) {
    e.appendChild(document.createTextNode(t))
}

function R() {
    u && (v.left = V(t, "offsetLeft") + "px", v.top = V(t, "offsetTop") + t.offsetHeight - 1 + "px", v.width = t.offsetWidth + "px"), D = 1
}

function V(e, t) {
    for (var n = 0, a = 0; e && n < 2;) a += e[t], e = e.offsetParent, n += 1;
    return a
}

function fa(e) {
    j = e[0], globalVal = e;
    try {
        u.innerHTML = ""
    } catch (e) {
        for (; u.rows.length;) u.deleteRow(-1)
    }
    var t = 0;
    numElement = 0;
    for (var n, a = 0; a < e[1].length; a++)
        if (n = e[1][a]) {
            t++;
            var l = u.insertRow(-1);
            l.onclick = function() {
                W(this.completeString)
            }, l.onmouseover = ea, l.onmousemove = function() {
                D && (D = 0, ea.call(this))
            }, l.completeString = n[1], l.completeId = n[2], l.className = "czc_a";
            var i = document.createElement("td");
            appElementOnDiv(i, n[0]), i.className = "czc_c", l.appendChild(i), numElement++
        }
    if (t > 0) {
        var r = u.insertRow(-1),
            c = document.createElement("td");
        c.colSpan = 2, r.className = "czc_e";
        var d = document.createElement("span");
        r.appendChild(c), c.appendChild(d), appElementOnDiv(d, "close"), d.onclick = function() {
            v.visibility = "hidden"
        }
    }
    o = u.rows
}

function ga(e) {
    s = e, document.getElementById("disp_t") || ((u = document.createElement("table")).cellSpacing = u.cellPadding = "0", u.setAttribute("id", "disp_t"), u.setAttribute("style", "z-index:999999999;position:absolute;background-color:white;margin-top:10px;float:left;"), u.cellSpacing = u.cellPadding = "0", v = u.style, s.appendChild(u)), u.className = "czc_m"
}

function W(e) {
    t.value = e, v.visibility = "hidden"
}

function PDisplay(e) {
    var t = existing_row = q;
    38 == e ? t - 1 < 0 ? t = numElement - 1 : t-- : 40 == e && (t + 1 > numElement - 1 ? t = 0 : t++);
    for (var n, a = 0; n = o[a]; a++) existing_row == a && (n.className = "czc_c"), t == a && (q = a, n.className = "czc_b", qstring = n.completeString)
}

function pk(ev) {
    var keyvalue = "";
    if (keyvalue = window.event ? window.event.keyCode : ev.which, 13 == keyvalue && "hidden" != v.visibility) {
        if ("" != qstring && (t.value = qstring, "" != callBackFunc && eval(callBackFunc + "(globalVal);")), prev = qstring, v.visibility = "hidden", !window.event) return t.focus(), !1;
        window.event.keyCode = 9
    }
}

function hidRes() {
    v.visibility = "hidden"
}

function ea() {
    var e = q;
    if (!D) {
        p && (p.className = "czc_a"), this.className = "czc_b", p = this, qstring = this.completeString;
        for (var t, n = 0; t = o[n]; n++) t == p && (q = n), e == n && (t.className = "czc_a")
    }
}

function seturl(e, t, n, a, l) {
    var i = '"' + window.location + '"';
    if (-1 != i.indexOf("flag")) {
        var o = i.split("&flag"),
            r = o[0].length,
            c = o[0].substring(1, r);
        if ("null" != t) {
            var d = c + "&flag=" + e + "&" + t + "=" + n;
            if ("null" != a) var s = d + "&" + a + "=" + l
        }
    } else if ("null" != t) {
        d = window.location + "&flag=" + e + "&" + t + "=" + n;
        if ("null" != a) s = d + "&" + a + "=" + l
    }
    window.location = s
}

function showcolorgrid(e) {
    id1 = e, $(document).ready(function() {
        var e, t = $.farbtastic("#picker"),
            n = $("#picker").css("opacity", 1),
            a = "#" + id1;
        $(a).each(function() {
            t.linkTo(this), $(this).css("opacity", .75)
        }).focus(function() {
            e && $(e).css("opacity", .75).removeClass("colorwell-selected"), t.linkTo(this), n.css("opacity", 1), $(e = this).css("opacity", 1).addClass("colorwell-selected")
        })
    })
}

function showCalander(e) {
    id1 = e, $(document).ready(function() {
        var e = "#" + id1;
        $(e).datepicker({
            changeMonth: !0,
            changeYear: !0,
            yearRange: "-100:+0",
            showOn: "button",
            buttonImage: "images/calendar.gif",
            buttonImageOnly: !0,
            showButtonPanel: !0
        })
    })
}

function filldropdown(e, t, n) {
    xmlhttpPost("fill_dropdown.php", "&whereid=" + e + "&whereval=" + t + "&dependencyStr=" + n, "fill_dropdown")
}

function fill_dropdown(e) {
    text = e;
    var t = JSON.parse(text);
    for (var n in t.dropDownOptions) {
        var a = t.dropDownOptions[n].optionstr,
            l = t.dropDownOptions[n].fieldToFill;
        document.getElementById(l).innerHTML = a
    }
}

function hideLengthField(e, t, n, a) {
    if (n == a) {
        var l = e + "_" + t;
        document.getElementById(l).style.display = "none"
    }
}

function generic_fun(e, t, n, a, l, i, o, r, c, d, s = "") {
    $("#" + c + " #" + a).val("");
    var u = {
            _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            encode: function(e) {
                var t, n, a, l, i, o, r, c = "",
                    d = 0;
                for (e = u._utf8_encode(e); d < e.length;) l = (t = e.charCodeAt(d++)) >> 2, i = (3 & t) << 4 | (n = e.charCodeAt(d++)) >> 4, o = (15 & n) << 2 | (a = e.charCodeAt(d++)) >> 6, r = 63 & a, isNaN(n) ? o = r = 64 : isNaN(a) && (r = 64), c = c + this._keyStr.charAt(l) + this._keyStr.charAt(i) + this._keyStr.charAt(o) + this._keyStr.charAt(r);
                return c
            },
            decode: function(e) {
                var t, n, a, l, i, o, r = "",
                    c = 0;
                for (e = e.replace(/[^A-Za-z0-9+\/=]/g, ""); c < e.length;) t = this._keyStr.indexOf(e.charAt(c++)) << 2 | (l = this._keyStr.indexOf(e.charAt(c++))) >> 4, n = (15 & l) << 4 | (i = this._keyStr.indexOf(e.charAt(c++))) >> 2, a = (3 & i) << 6 | (o = this._keyStr.indexOf(e.charAt(c++))), r += String.fromCharCode(t), 64 != i && (r += String.fromCharCode(n)), 64 != o && (r += String.fromCharCode(a));
                return r = u._utf8_decode(r)
            },
            _utf8_encode: function(e) {
                e = e.replace(/rn/g, "n");
                for (var t = "", n = 0; n < e.length; n++) {
                    var a = e.charCodeAt(n);
                    a < 128 ? t += String.fromCharCode(a) : a > 127 && a < 2048 ? (t += String.fromCharCode(a >> 6 | 192), t += String.fromCharCode(63 & a | 128)) : (t += String.fromCharCode(a >> 12 | 224), t += String.fromCharCode(a >> 6 & 63 | 128), t += String.fromCharCode(63 & a | 128))
                }
                return t
            },
            _utf8_decode: function(e) {
                for (var t = "", n = 0, a = c1 = c2 = 0; n < e.length;)(a = e.charCodeAt(n)) < 128 ? (t += String.fromCharCode(a), n++) : a > 191 && a < 224 ? (c2 = e.charCodeAt(n + 1), t += String.fromCharCode((31 & a) << 6 | 63 & c2), n += 2) : (c2 = e.charCodeAt(n + 1), c3 = e.charCodeAt(n + 2), t += String.fromCharCode((15 & a) << 12 | (63 & c2) << 6 | 63 & c3), n += 3);
                return t
            }
        },
        f = u.decode(s),
        m = "{";
    if (f) {
        var p = JSON.parse(f);
        for (key in p) {
            var h = p[key];
            for (db_clmn_name in h)
                if (document.getElementById(h[db_clmn_name])) {
                    var v = document.getElementById(h[db_clmn_name]).value;
                    m += '"' + db_clmn_name + '":"' + v + '",'
                }
        }
    }
    m = m.replace(/,\s*$/, "");
    m += "}";
    var _ = "";
    if ("" != d) {
        var g = u.decode(d).split("###");
        for (key in _ = "", g)
            if ("0" != key && "1" != key && "2" != key && "3" != key) {
                var y = $("#" + c + " #" + g[key]).val();
                y && (_ += y + "###")
            } else _ += g[key] + "###";
        var b = _.slice(0, _.length - 3);
        _ = b, _ = u.encode(_)
    }
    var w = u.encode(m);
    xmlhttpPost("get_dynamic_data.php", "prnt_id=" + e + "&prnt_val=" + t + "&prnt_typ=" + n + "&chld_id=" + a + "&chld_typ=" + l + "&child_val=" + o + "&mode=" + r + "&form_name=" + c + "&db_data=" + i + "&extra_where=" + w + "&file_fetch_str=" + _, "fill_values_dynamic")
}

function fill_values_dynamic(e) {
    console.log('fill_values_dynamic');
    console.log(e);
    var t = (e = e.trim()).split("$#$"),
        n = t[0],
        a = t[1],
        l = t[2],
        o = t[3],
        r = t[4],
        c = t[5],
        d = t[6];
    if ("check_data" != c) {
        if ("select-one" == l) {
            var s = n.split("@");
            for ($("#" + r + " #" + a).html(""), i = 0; i < s.length - 1; i++) {
                obj_final = s[i].split("##");
                var u = document.createElement("option");
                u.value = obj_final[0], u.text = obj_final[1], $("#" + r + " #" + a).append(u), u.value == o && u.setAttribute("selected", "true")
            }
        }
        "text" == l && ("" == o && (o = n), $("#" + r + " #" + a).val(o))
    } else "" != n ? bootbox.alert("Information already exists for " + n, function() {}) : $("#" + r + " #" + a).val(d)
}

function show_calender(e) {
    $("#" + e.id).datepicker({
        changeMonth: !0,
        changeYear: !0,
        yearRange: "-100:+0"
    })
}
window.czentrix = new Object, window.czentrix.ac = {
    h: fa
}